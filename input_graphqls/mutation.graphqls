type Mutation {
  createUserGroup(input: UserGroupInput!): UserGroup!
  updateUserGroup(id: UUID!, input: UserGroupInput!): UserGroup!

  createUserRole(input: UserRoleInput!): UserRole!
  updateUserRole(id: UUID!, input: UserRoleInput!): UserRole!

  createUser(input: UserInput!): User!
  updateUser(id: UUID!, input: UserInput!): User!

  createCustomer(input: CustomerInput!): Customer!
  updateCustomer(id: UUID!, input: CustomerInput!): Customer!

  createComponent(input: ComponentInput!): Component!
  updateComponent(id: UUID!, input: ComponentInput!): Component!

  createComponentImage(input: ComponentImageInput!): ComponentImage!
  updateComponentImage(id: UUID!, input: ComponentImageInput!): ComponentImage!

  createComponentManufacturingTip(
    input: ComponentManufacturingTipInput!
  ): ComponentManufacturingTip!
  updateComponentManufacturingTip(
    id: UUID!
    input: ComponentManufacturingTipInput!
  ): ComponentManufacturingTip!

  createFactoryLine(input: FactoryLineInput!): FactoryLine!
  updateFactoryLine(id: UUID!, input: FactoryLineInput!): FactoryLine!

  createJigHanger(input: JigHangerInput!): JigHanger!
  updateJigHanger(id: UUID!, input: JigHangerInput!): JigHanger!

  createJigBarrel(input: JigBarrelInput!): JigBarrel!
  updateJigBarrel(id: UUID!, input: JigBarrelInput!): JigBarrel!

  createLineConfig(input: LineConfigInput!): LineConfig!
  updateLineConfig(id: UUID!, input: LineConfigInput!): LineConfig!

  createOrder(input: OrderInput!): Order!
  updateOrder(id: UUID!, input: OrderInput!): Order!

  createOrderClass(input: OrderClassInput!): OrderClass!
  updateOrderClass(id: UUID!, input: OrderClassInput!): OrderClass!

  createOrderState(input: OrderStateInput!): OrderState!
  updateOrderState(id: UUID!, input: OrderStateInput!): OrderState!

  createInstruction(input: InstructionInput!): Instruction!
  updateInstruction(id: UUID!, input: InstructionInput!): Instruction!

  createOperation(input: OperationInput!): Operation!
  updateOperation(id: UUID!, input: OperationInput!): Operation!

  createOperationState(input: OperationStateInput!): OperationState!
  updateOperationState(id: UUID!, input: OperationStateInput!): OperationState!

  createOperationBadDetail(input: OperationBadDetailInput!): OperationBadDetail!
  updateOperationBadDetail(
    id: UUID!
    input: OperationBadDetailInput!
  ): OperationBadDetail!

  createBadDetailReason(input: BadDetailReasonInput!): BadDetailReason!
  updateBadDetailReason(
    id: UUID!
    input: BadDetailReasonInput!
  ): BadDetailReason!

  createShipping(input: ShippingInput!): Shipping!
  updateShipping(id: UUID!, input: ShippingInput!): Shipping!

  createReceipt(input: ReceiptInput!): Receipt!
  updateReceipt(id: UUID!, input: ReceiptInput!): Receipt!

  createBilling(input: BillingInput!): Billing!
  updateBilling(id: UUID!, input: BillingInput!): Billing!
}

input UserGroupInput {
  name: String!
}
input UserRoleInput {
  name: String!
}

input UserInput {
  name: String
  group: UUID
  role: UUID
}

input CustomerInput {
  name: String
  nickname: String
  email: String
  phone: String
  zipCode: String
  address: String
  addressBuilding: String
  orderClass: String
  representUserId: UUID
  comment: String
}

input ComponentInput {
  partId: UUID
  customerId: UUID
  partNumber: String
  shortPartNumber: String
  name: String
  isPrototype: Boolean
  platingStandard: String
  filmThicknessStandard: String
  minimumFilmThickness: Float
  maximumFilmThickness: Float
  bakingStandard: String
  platingColor: String
  electricCurrentValue: Float
  electricCurrentDensity: Float
  container: String
  sheetNumber: Int
  surfaceArea: Float
  weight: Float
  thickness: Float
  material: String
  productShape: String
  thickeningTime: Float
  fallPrevention: String
  management: String
  welding: String
  materialPrice: Float
  processCost: Float
  chemicalCost: Float
  laborCost: Float
  salesManagementCost: Float
  processExpense: Float
  outsourcingPrice: Float
  salesPrice: Float
  leadTime: String
  minimumProductionUnitNumber: Int
  averageProductionUnitNumber: Int
  maximumProductionUnitNumber: Int
  annualProductionNumber: Int
  monthlyProductionNumber: Int
  dailyProductionNumber: Int
  salesLog: String
  measurement: String
  drying: String
  salesTax: Float
  salesComment: String
  bluePrintURL: String
  airBlow: String
  shippingPallet: String
  preProcesses: String
  postProcesses: String
  ultrasonic: String
  shaking: String
  dehydration: String
  standardDocumentURL: String
  receiveTime: Float
  shippingTime: Float
  setupTime: Float
  removalTime: Float
  inspectionTime: Float
  inspectionRank: String
  isDiscontinued: Boolean
  manufacturingLog: String
  salesUpdateComment: String
  manufacturingUpdateComment: String

  creatorId: UUID
  updaterId: UUID

  updatedDate: DateTime
  createdDate: DateTime
}

input ComponentImageInput {
  partId: UUID!
  name: String
  reference: String
}

input ComponentManufacturingTipInput {
  partId: UUID!
  description: String
}

input FactoryLineInput {
  name: String
  machine: String
}

input JigHangerInput {
  name: String
  step: Int
  row: Int
  hook: Int
}

input JigBarrelInput {
  code: String
}

input LineConfigInput {
  partId: UUID
  factoryLineId: UUID
  jigHangerId: UUID
  jigBarrelId: UUID
  jigStock: Int
  description: String
}

input OrderInput {
  customerId: UUID!
  representUserId: UUID
  inputUserId: UUID
  componentId: UUID!
  orderDate: DateTime
  inputDate: DateTime
  deadline: DateTime
  productionNumber: Int
  planProductionNumber: Int
  boxNumber: Int
  numberInBox: Int
  boxTypeId: String
  orderClassId: UUID
  isPrototype: Boolean
  delivery: String
  comment: String
  stateId: UUID
}

input OrderClassInput {
  name: String!
}

input OrderStateInput {
  state: String!
}

input InstructionInput {
  orderId: UUID!
  isReplating: Boolean
  manufacturingNumber: String
  qrCode: String
  planProductionNumber: Int
  boxNumber: Int
  numberInBox: Int
  customerId: UUID
  componentId: UUID
  componentPartId: String
  componentShortPartId: String
  componentName: String
  componentIsPrototype: Boolean
  componentPlatingStandard: String
  componentFilmThicknessStandard: String
  componentMinimumFilmThickness: Float
  componentMaximumFilmThickness: Float
  componentBakingStandard: String
  componentPlatingColor: String
  componentElectricCurrentValue: Float
  componentElectricCurrentDensity: Float
  componentContainer: String
  componentSheetNumber: Int
  componentSurfaceArea: Float
  componentWeight: Float
  componentThickness: Float
  componentMaterial: String
  componentProductShape: String
  componentThickeningTime: Float
  componentFallPrevention: String
  componentManagement: String
  componentWelding: String

  componentMaterialPrice: Float
  componentProcessCost: Float
  componentChemicalCost: Float
  componentLaborCost: Float
  componentSalesManagementCost: Float
  componentProcessExpense: Float
  componentOutsourcingPrice: Float
  componentSalesPrice: Float
  componentLeadTime: String
  componentMinimumProductionUnitNumber: Int
  componentAverageProductionUnitNumber: Int
  componentMaximumProductionUnitNumber: Int
  componentAnnualProductionNumber: Int
  componentMonthlyProductionNumber: Int
  componentDailyProductionNumber: Int
  componentSalesLog: String
  componentMeasurement: String
  componentDrying: String
  componentSalesTax: Float
  componentSalesComment: String
  componentBluePrintURL: String
  componentAirBlow: String
  componentShippingPallet: String
  componentPreProcesses: String
  componentPostProcesses: String
  componentUltrasonic: String
  componentShaking: String
  componentDehydration: String
  componentStandardDocumentURL: String
  componentReceiveTime: Float
  componentShippingTime: Float
  componentSetupTime: Float
  componentRemovalTime: Float
  componentInspectionTime: Float
  componentInspectionRank: String
  componentIsDiscontinued: Boolean
  componentManufacturingLog: String
  componentSalesUpdateComment: String
  componentManufacturingUpdateComment: String
  componentCreatorId: UUID
  componentUpdaterId: UUID
  componentUpdatedDate: DateTime
  componentCreatedDate: DateTime
  lineConfigId: UUID

  creatorId: UUID
  updaterId: UUID
  updatedDate: DateTime
  createdDate: DateTime
  comment: String
}

input OperationInput {
  instructionId: UUID
  inputDate: DateTime
  startDate: DateTime
  endDate: DateTime
  inputUserId: UUID
  planNumber: Int
  discardNumber: Int
  replatingNumber: Int
  goodNumber: Int
  stateId: UUID
  comment: String
}

input OperationStateInput {
  state: String
}

input OperationBadDetailInput {
  operationId: UUID
  reasonId: UUID
  number: Int
  isDiscard: Boolean
}

input BadDetailReasonInput {
  reason: String
}

input ShippingInput {
  orderId: UUID
  shippingDate: DateTime
  shippingNumber: Int
  shippingBoxNumber: Int
}

input ReceiptInput {
  customerId: UUID
  shippingDate: DateTime
  delivery: String
  method: String
  createdDate: DateTime
}

input BillingInput {
  customerId: UUID
  orderId: UUID
  deadline: DateTime
}
